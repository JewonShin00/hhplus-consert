plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.openapi.generator' version '6.6.0'
}

group = 'com.concert_reservation'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starter dependencies
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // OpenAPI UI dependencies
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // Jakarta Servlet API for Spring Boot 3.x
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'

    // Jakarta Validation API (used for validation with Spring Boot 3.x)
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'

    // JJWT Library for JWT handling (version 0.11.5)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리 필요시 사용

    // JAXB dependencies for XML handling (needed by JJWT)
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.0'

    // Mockito for unit testing
    testImplementation 'org.mockito:mockito-core:5.0.0'

    // H2 Database for testing purposes
    testImplementation 'com.h2database:h2'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/openapi.yaml"
    outputDir = "$buildDir/generated"
    additionalProperties = [
            interfaceOnly: 'true'
    ]
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}
