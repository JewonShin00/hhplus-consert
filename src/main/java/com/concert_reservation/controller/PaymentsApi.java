/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.concert_reservation.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;

import java.util.Optional;
import javax.annotation.Generated;

import com.concert_reservation.repository.PaymentRequest;
import com.concert_reservation.repository.PaymentResponse;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-10-10T23:17:48.086265+09:00[Asia/Seoul]")
@Validated
@Tag(name = "PaymentController", description = "the PaymentController API")
public interface PaymentsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /payments : Make a payment
     * 사용자가 예약한 좌석을 결제합니다.
     *
     * @param paymentRequest  (optional)
     * @return Payment response. (status code 200)
     */
    @Operation(
        operationId = "createPayment",
        summary = "Make a payment",
        description = "사용자가 예약한 좌석을 결제합니다.",
        tags = { "PaymentController" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Payment response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PaymentResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/payments",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<PaymentResponse> createPayment(
        @Parameter(name = "PaymentRequest", description = "") @Valid @RequestBody(required = false) PaymentRequest paymentRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"paymentId\" : \"pay123\", \"status\" : \"SUCCESS\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
